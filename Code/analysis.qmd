---
title: "Analysis"
author: "Tom Mushkat"
format: html
editor: visual
---



```{r}
pacman::p_load(here, doSPSS, tidyverse, psych, ez, effectsize)
Data <- read_csv(here('Data//data_to_analyze.csv')) 

Data %>% nrow()
table(Data$full_condition)


table(Data$full_condition, Data$was_physician)

Data <- Data %>%
  filter((was_physician == 'Yes' & doc_lay == 'doc') |
           (was_physician %in% c("I don't remember", 'No') & doc_lay == 'layperson'))

```





```{r}
table(Data$full_condition, Data$bin_faces)
table(Data$full_condition, Data$Suprise_bin)
table(Data$full_condition, Data$rude_bin)
table(Data$full_condition, Data$vlaKnowledge_bin)
table(Data$full_condition, Data$white_ethnicity)
table(Data$full_condition, Data$realHappen_bin)
table(Data$full_condition, Data$male_participant)

oneWayAnova(Data$Age.x, Data$full_condition)


indttest(Data$Complaience, Data$Suprise_bin)
cor.test(Data$Complaience, Data$Age.x)
```


# METI overall
 Corr with  Suprise_bin
```{r, warning=FALSE, message=FALSE}
Data %>% 
  select(Competent, Intelligent, Educated, Professional, Experienced, Qualified
                                                , Sincere, Honest, Just, Fair
                                                , Moral, Ethical, Responsible, Considerate) %>% 
  alpha()

ez::ezANOVA(data      = Data
            , dv      = METI_overall
            , wid     = Q1
            , between = c(know_IDK, doc_lay, just_noJust)
            , type    = 3
            , return_aov = TRUE
            , detailed   = FALSE

            , white.adjust = FALSE)



            , between_covariates = .(white_ethnicity, male_participant, Age.x, Suprise_bin, vlaKnowledge_bin))


Data %>% 
  group_by(know_IDK, doc_lay, just_noJust) %>% 
  summarise(Mean = mean_cl_normal(METI_overall)
            , N = length(METI_overall))

Data %>% 
  mutate(just_noJust = as.factor(just_noJust)
         , just_noJust = fct_relevel(just_noJust, c('no_just', 'just'))) %>% 
  ggplot(aes(x = just_noJust, y = METI_overall, fill = know_IDK)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) +
  facet_wrap(~doc_lay) 


Data %>% 
  ggplot(aes(x = doc_lay, y = METI_overall, fill = doc_lay)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 


Data %>% 
  ggplot(aes(x = know_IDK, y = METI_overall, fill = know_IDK)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 


Data %>% 
  mutate(just_noJust = as.factor(just_noJust)
         , just_noJust = fct_relevel(just_noJust, c('no_just', 'just'))) %>% 
  ggplot(aes(x = know_IDK, y = METI_overall, fill = just_noJust)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 
Data %>% 
  group_by(know_IDK, just_noJust) %>% 
  summarise(Mean = mean_cl_normal(METI_overall)
            , N = length(METI_overall))

fit1 <- lm(METI_overall ~ just_noJust * know_IDK, data = Data)
emmeans::emmeans(fit1, specs = pairwise ~ just_noJust * know_IDK, adjust = 'BH')
# postHoc(Data$METI_overall, paste0(Data$just_noJust, Data$know_IDK))


```

# METI Expertise
 Corr with  Suprise_bin

```{r, warning=FALSE, message=FALSE}
Data %>% 
  select(Competent, Intelligent, Educated, Professional, Experienced, Qualified) %>% 
  alpha()

ez::ezANOVA(data      = Data
            , dv      = Expertise
            , wid     = Q1
            , between = c(know_IDK, doc_lay, just_noJust)
            , type    = 3
            , return_aov = TRUE
            , detailed   = FALSE

            , white.adjust = FALSE)

            , between_covariates = .(white_ethnicity, male_participant, Age.x, Suprise_bin, vlaKnowledge_bin))

Data %>% 
  group_by(know_IDK, doc_lay, just_noJust) %>% 
  summarise(Mean = mean_cl_normal(Expertise)
            , N = length(Expertise))


Data %>% 
  mutate(just_noJust = as.factor(just_noJust)
         , just_noJust = fct_relevel(just_noJust, c('no_just', 'just'))) %>% 
  ggplot(aes(x = just_noJust, y = Expertise, fill = doc_lay)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) +
  facet_wrap(~know_IDK) 


Data %>% 
  mutate(just_noJust = as.factor(just_noJust)
         , just_noJust = fct_relevel(just_noJust, c('no_just', 'just'))) %>% 
  ggplot(aes(x = just_noJust, y = Expertise, fill = just_noJust)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 


Data %>% 
  ggplot(aes(x = doc_lay, y = Expertise, fill = doc_lay)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 


Data %>% 
  mutate(just_noJust = as.factor(just_noJust)
         , just_noJust = fct_relevel(just_noJust, c('no_just', 'just'))) %>% 
  ggplot(aes(x = just_noJust, y = Expertise, fill = know_IDK)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10))
  
fit2 <- lm(Expertise ~ just_noJust * know_IDK, data = Data)
emmeans::emmeans(fit2, specs = pairwise ~ just_noJust * know_IDK, adjust = 'BH')

# postHoc(Data$Expertise, paste0(Data$just_noJust, Data$know_IDK))

Data %>% 
  group_by(know_IDK, just_noJust) %>% 
  summarise(Mean = mean_cl_normal(Expertise)
            , N = length(Expertise))




Data %>% 
  filter(just_noJust == 'no_just') %>% 
  ggplot(aes(x = know_IDK, y = Expertise, fill = doc_lay)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 
```
 
 
# METI Integrity

```{r, warning=FALSE, message=FALSE}
Data %>% 
  select(Sincere, Honest, Just, Fair) %>% 
  alpha()

ez::ezANOVA(data      = Data
            , dv      = Integrity
            , wid     = Q1
            , between = c(know_IDK, doc_lay, just_noJust)
            , type    = 3
            , return_aov = TRUE
            , detailed   = FALSE

            , white.adjust = FALSE)

            , between_covariates = .(white_ethnicity, male_participant, Age.x, Suprise_bin, vlaKnowledge_bin))

Data %>% 
  group_by(know_IDK, doc_lay, just_noJust) %>% 
  summarise(Mean = mean_cl_normal(Integrity)
            , N = length(Integrity))


Data %>% 
  mutate(just_noJust = as.factor(just_noJust)
         , just_noJust = fct_relevel(just_noJust, c('no_just', 'just'))) %>% 
  ggplot(aes(x = just_noJust, y = Integrity, fill = doc_lay)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) +
  facet_wrap(~know_IDK ) 


Data %>% 
  ggplot(aes(x = know_IDK, y = Integrity, fill = know_IDK)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 


Data %>% 
  ggplot(aes(x = doc_lay, y = Integrity, fill = doc_lay)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 


```

# METI Benevolence
```{r, warning=FALSE, message=FALSE}
Data %>% 
  select(Moral, Ethical, Responsible, Considerate) %>% 
  alpha()

ez::ezANOVA(data      = Data
            , dv      = Benevolence
            , wid     = Q1
            , between = c(know_IDK, doc_lay, just_noJust)
            , type    = 3
            , return_aov = TRUE
            , detailed   = FALSE

            , white.adjust = FALSE)

            , between_covariates = .(white_ethnicity, male_participant, Age.x, Suprise_bin, vlaKnowledge_bin))

Data %>% 
  group_by(know_IDK, doc_lay, just_noJust) %>% 
  summarise(Mean = mean_cl_normal(Benevolence)
            , N = length(Benevolence))


Data %>% 
  ggplot(aes(x = just_noJust , y = Benevolence, fill = know_IDK)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) +
  facet_wrap(~doc_lay) 


Data %>% 
  ggplot(aes(x = know_IDK, y = Benevolence, fill = know_IDK)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 


Data %>% 
  ggplot(aes(x = doc_lay, y = Benevolence, fill = doc_lay)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 

```

# Complaience
```{r, warning=FALSE, message=FALSE}


ez::ezANOVA(data      = Data
            , dv      = Complaience
            , wid     = Q1
            , between = c(know_IDK, doc_lay, just_noJust)
            , type    = 3
            , return_aov = TRUE
            , detailed   = FALSE

            , white.adjust = TRUE)

            , between_covariates = .(white_ethnicity, male_participant, Age.x, Suprise_bin, vlaKnowledge_bin))

Data %>% 
  group_by(know_IDK, doc_lay, just_noJust) %>% 
  summarise(Mean = mean_cl_normal(Complaience)
            , N = length(Complaience))


Data %>% 
  ggplot(aes(x = just_noJust , y = Complaience, fill = know_IDK)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) +
  facet_wrap(~doc_lay) 



Data %>% 
  ggplot(aes(x = know_IDK, y = Complaience, fill = know_IDK)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 


Data %>% 
  ggplot(aes(x = doc_lay, y = Complaience, fill = doc_lay)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10)) 


Data %>% 
  group_by(know_IDK, doc_lay) %>% 
  summarise(Mean = mean_cl_normal(Complaience)
            , N = length(Complaience))

Data %>% 
  ggplot(aes(x = doc_lay, y = Complaience, fill = know_IDK)) +
   ggplot2::stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", color = "red", width = 0.2, size = 1, position = position_dodge(0.9)) +
    ggplot2::stat_summary(fun = mean, geom = "bar", alpha = 0.2, position = position_dodge(0.9)) +
    ggplot2::theme_bw() +
  scale_y_continuous(breaks = seq(from = 1, to = 10, by = 1)) +
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 10),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10))


fit3 <- lm(Complaience ~ doc_lay * know_IDK, data = Data)
emmeans::emmeans(fit3, specs = pairwise ~ doc_lay * know_IDK, adjust = 'BH')
```

## Three way interaction logistic regression

```{r}
Data %>% select(full_condition, bin_faces) %>% table()
Data %>% select(full_condition, odd_is_male) %>% table()
face_data <- Data %>% drop_na(male_participant)

CT(Data$bin_faces, Data$vlaKnowledge_bin)
indttest(Data$Age.x, Data$bin_faces)

regLog1 <- stats::glm(male_face ~ just_noJust * know_IDK * doc_lay * male_participant
                        , family = binomial('logit'), data = face_data)   # Performing a logistic regression
  
+ male_participant +
                        white_ethnicity + Age.x + Suprise_bin  + vlaKnowledge_bin 

ORCI    <- round(exp(cbind(Odds_Ratios = stats::coef(regLog1), stats::confint(regLog1))), 2)  # Calculation odds ratios and confidance intervales for the odds ratios

  cdiff           <- round(regLog1$null.deviance - regLog1$deviance, 2)  # Calculating the Chi square value of the model
  dfdiff          <- regLog1$df.null - regLog1$df.residual              # Calculating the degrees of freedom value of the model
  p               <- round(stats::pchisq(q = cdiff, df = dfdiff, lower.tail = FALSE), 100) # Calculating the p value of the model
  Nagelkerke      <- rcompanion::nagelkerke(fit = regLog1, null = NULL, restrictNobs = FALSE)  # Calculating the explained variance
  NagelkerkePrint <- paste0(100 * round(Nagelkerke$Pseudo.R.squared.for.model.vs.null[3], 4), "%") # Extracting the explained variance

  Hoslem          <- ResourceSelection::hoslem.test(x = regLog1$y, y = fitted(regLog1), g = 10)  # Calculating the significance of the accuracy
  hoslemStatistic <- round(Hoslem$statistic, 2)
  hoslemP         <- round(Hoslem$p.value, 2)

  
  
face_data %>% 
  mutate(N = nrow(face_data)) %>% 
  group_by(just_noJust, know_IDK, doc_lay, N) %>% 
  reframe(n = sum(male_face)
            , ratio = 100 * n / N) %>%
  distinct() %>% 
ggplot(aes(x = just_noJust, y = ratio, fill = know_IDK, color = know_IDK)) + 
  geom_bar(stat = "identity", position = "dodge")  +
  theme_bw() +
  facet_grid(~doc_lay)  
  
    
face_data %>% 
  filter(male_participant == 1) %>% 
  mutate(N = nrow(face_data)) %>% 
  group_by(just_noJust, know_IDK, doc_lay, N) %>% 
  reframe(n = sum(male_face)
            , ratio = 100 * n / N) %>%
    distinct() %>% 
ggplot(aes(x = just_noJust, y = ratio, fill = know_IDK, color = know_IDK)) + 
  geom_bar(stat = "identity", position = "dodge")  +
  theme_bw() +
  facet_grid(~doc_lay)

face_data %>% 
  filter(male_participant != 1) %>% 
  mutate(N = nrow(face_data)) %>% 
  group_by(just_noJust, know_IDK, doc_lay, N) %>% 
  reframe(n = sum(male_face)
            , ratio = 100 * n / N) %>%
    distinct() %>% 
ggplot(aes(x = just_noJust, y = ratio, fill = know_IDK, color = know_IDK)) + 
  geom_bar(stat = "identity", position = "dodge")  +
  theme_bw() +
  facet_grid(~doc_lay)

  mutate(N = nrow(face_data)) %>% 
  group_by(just_noJust, know_IDK, doc_lay, N) %>% 
  reframe(n = sum(male_face)
            , ratio = 100 * n / N) %>%
    distinct() %>% 


face_data %>% 
      mutate(N = nrow(face_data)) %>% 

  group_by(know_IDK, male_participant, doc_lay, N) %>% 
reframe(n = sum(male_face)
            , ratio = 100 * n / N) %>%
    distinct() %>%  
    mutate(male_participant = if_else(male_participant == 1, 'Man', 'Woman')) %>% 
ggplot(aes(x = doc_lay, y = ratio, fill = know_IDK, color = know_IDK)) + 
  geom_bar(stat = "identity", position = "dodge")  +
  theme_bw() +
  facet_grid(~male_participant)



Data %>% 
  select (bin_faces, doc_lay, know_IDK) %>% 
  table()




Data %>% 
  select(know_IDK, bin_faces, male_participant) %>% 
  table()

Data %>% 
  select(doc_lay, bin_faces, male_participant) %>% 
  table()

Data %>% 
  select(just_noJust, bin_faces, male_participant) %>% 
  table()

CT(face_data$bin_faces, face_data$male_participant)
regLog1 <- stats::glm(male_face ~ male_participant 
                        , family = binomial('logit'), data = face_data)   #
regLog1 %>% summary()

```
